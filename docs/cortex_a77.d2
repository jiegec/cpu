cpu : ARM Cortex-A77 CPU {
  frontend: Frontend {
    bp: Branch Predictor {
      # Source: ARM
      # "4x larger L1-BTB (64-entry, 1-cycle latency)"
      l1btb: 64-entry L2 BTB, 0 bubble

      # Source: ARM
      # "33% larger main BTB (8K entry, better performance for real workloads)"
      l2btb: 8K-entry L2 BTB
    }

    l1ic: L1 IC {
      # Source: ARM
      l1ic: 64KB L1 IC

      # Source: ARM
      l1itlb: 48-entry fully associative L1 ITLB
    }

    fq: Fetch Queue
    bp -> fq
    fq -> l1ic

    iq: Instruction Queue
    l1ic -> iq

    # Source: ARM
    # "6 Instrs/cycle"
    decode: 6-way Decode
    iq -> decode

    # Source: ARM
    mopc: 1.5K MOP Cache
    decode -> mopc
    bp -> mopc

    mop: MOP Queue

    # Source: ARM
    mopc -> mop
    decode -> mop

    # Source: ARM
    rename: Rename
    mop -> rename
  }

  backend: Backend {
    # Source: ARM
    # "160 entry instruction window"
    rob: 160-entry ROB

    rf: Register File {
      irf: Integer Register File

      flagsrf: Flags Register File

      vrf: FP/Vector Register File
    }

    # Source: ARM
    sched1: ALU Scheduler

    # Source: ARM
    pipe1: Pipe \#1 {
      Branch
    }
    rob -> sched1 -> rf -> pipe1

    # Source: ARM
    pipe2: Pipe \#2 {
      Branch
    }
    rob -> sched1 -> rf -> pipe2

    # Source: ARM
    pipe3: Pipe \#3 {
      ALU
    }
    rob -> sched1 -> rf -> pipe3

    # Source: ARM
    pipe4: Pipe \#4 {
      ALU
    }
    rob -> sched1 -> rf -> pipe4

    # Source: ARM
    pipe5: Pipe \#5 {
      ALU
    }
    rob -> sched1 -> rf -> pipe5

    # Source: ARM
    pipe6: Pipe \#6 {
      ALU
      MAC
      DIV
    }
    rob -> sched1 -> rf -> pipe6

    # Source: ARM
    sched2: FP/Vector Scheduler

    # Source: ARM
    pipe7: Pipe \#7 {
      FMUL
      FADD
      FDIV
      Vec ALU
      IMAC
    }
    rob -> sched2 -> rf -> pipe7

    # Source: ARM
    pipe8: Pipe \#8 {
      FMUL
      FADD
      Vec ALU
    }
    rob -> sched2 -> rf -> pipe8

    # Source: ARM
    sched3: Memory Scheduler

    # Source: ARM
    pipe9: Pipe \#9 {
      Store Data
    }
    rob -> sched3 -> rf -> pipe9

    # Source: ARM
    pipe10: Pipe \#10 {
      Store Data
    }
    rob -> sched3 -> rf -> pipe10

    # Source: ARM
    pipe11: Pipe \#11 {
      Load AGU
      Store AGU
    }
    rob -> sched3 -> rf -> pipe11

    # Source: ARM
    pipe12: Pipe \#12 {
      Load AGU
      Store AGU
    }
    rob -> sched3 -> rf -> pipe12

    lsu: LSU {
      Load Queue
      Store Queue
      # Source: ARM Software Optimization Guide
      4 load to use integer latency
      5 load to use fp latency
      2 load/cycle
      2 store/cycle
    }

    pipe9 -> lsu
    pipe10 -> lsu
    pipe11 -> lsu
    pipe12 -> lsu
  }
  frontend.rename -> backend.rob

  mem: Memory {
    l1: L1 DC {
      # Source: ARM
      l1dc: 64KB L1 DC

      # Source: ARM
      l1dtlb: 48-entry fully associative L1 DTLB
    }

    l2: L2 {
      # Source: ARM
      128KB/256KB/512KB 8-way L2 Cache

      # Source: ARM
      l2tlb: 1280-entry 5-way L2 TLB
    }

    l1 -> l2

    l3: L3 {
      # Source: ARM
      512KB-4MB shared L3 cache
    }
    l2 -> l3
  }
  frontend.l1ic -> mem.l2
  backend.lsu -> mem.l1

  info: |md
    Drawn by Jiajie Chen @jiegec

    Based on data from ARM and Anandtech
  |
}